// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: filters.sql

package dbstore

import (
	"context"
)

const getFiltersByDataset = `-- name: GetFiltersByDataset :many
SELECT
    id, name, dataset, filter_type, description, is_active, created_at, updated_at
FROM
    filters
WHERE
    dataset = $1
    AND is_active = TRUE
ORDER BY
    created_at DESC
`

func (q *Queries) GetFiltersByDataset(ctx context.Context, dataset string) ([]Filter, error) {
	rows, err := q.db.Query(ctx, getFiltersByDataset, dataset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Filter
	for rows.Next() {
		var i Filter
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Dataset,
			&i.FilterType,
			&i.Description,
			&i.IsActive,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
