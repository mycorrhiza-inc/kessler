# local development docker compose
services:
  frontend:
    hostname: "app.kessler.xyz"
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file:
      - config/global.env
    volumes:
      - ./config/frontend.env.local:/app/.env.local
      - ./frontend/app/:/app/app
      - ./frontend/components/:/app/components
      - ./frontend/lib/:/app/lib
      - ./frontend/utils/:/app/utils
      - ./frontend/public:/app/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
    expose:
      - 3000
    command:
      - "npm"
      - "run"
      - "dev"

  reverse-proxy:
    # official image
    image: traefik:v2.11
    # eable web ui, listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "${PROXY_UI_PORT:-8083}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    env_file:
      - config/global.env
    environment:
      - MILVUS_DEV_DIR=/tmp/milvus/
    volumes:
      - ./backend:/app
      - ${VOLUMES_DIRECTORY:-./volumes}/instance:/app/instance
      - ${VOLUMES_DIRECTORY:-./volumes}/files:/files
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/`) || PathPrefix(`/schema/`)"
    command:
      - "uvicorn"
      - "main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5505"
      - "--workers"
      - "4"
      - "--reload"
    expose:
      - 5505

  valkey:
    container_name: valkey
    hostname: valkey
    image: valkey/valkey:7.2.5
    volumes:
      - ./volumes/valkey.conf:/etc/valkey/valkey.conf
      - ./volumes/valkey-data:/data
    command: valkey-server /etc/valkey/valkey.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    expose:
      - 6379
    ports:
      - 6379:6379
  # database:
  #   image: pgvector/pgvector:pg16
  #   restart: always
  #   ports:
  #     - "6543:5432"
  #   env_file:
  #     - config/global.env
  #   expose:
  #     - "5432"
  #   volumes:
  #     - ${VOLUMES_DIRECTORY:-./volumes}/pgdata:/var/lib/postgresql/data
