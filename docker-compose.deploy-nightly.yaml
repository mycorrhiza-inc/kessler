x-common-env: &common-env
  OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
  VERSION_HASH: prod
  DOMAIN: "nightly.kessler.xyz"
  PUBLIC_KESSLER_API_URL: "https://nightly-api.kessler.xyz"
  INTERNAL_KESSLER_API_URL: "http://backend-go:4041"
services:
  reverse-proxy:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      # Use Podman provider instead of Docker
      - "--providers.podman=true"
      - "--providers.podman.constraints=Label(`traefik.namespace`,`kessler`)"
      - "--providers.podman.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=mbright@kessler.xyz"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.filename=/etc/traefik/traefik_dynamic.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "${PROXY_UI_PORT:-8083}:8080"
    volumes:
      - "${VOLUMES_DIRECTORY:-./volumes}/letsencrypt:/letsencrypt"
      # Podman socket (rootless example; adjust path if needed)
      - "/run/user/1000/podman/podman.sock:/run/podman/podman.sock:ro"
      - "./traefik_dynamic.yaml:/etc/traefik/traefik_dynamic.yaml:ro"
    # Optional: Required for rootless Podman socket permissions
    user: "1000:1000" # Match your host UID/GID

  frontend:
    image: fractalhuman1/kessler-frontend:latest
    env_file:
      - config/global.env
    environment:
      <<: *common-env
    volumes:
      - ./config/frontend.env.local:/app.env.local
      - ./config/global.env:/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.frontend.rule=Host(`nightly.kessler.xyz`) && PathPrefix(`/`)"
      - "traefik.http.routers.blog.tls.domains[0].main=nightly.kessler.xyz"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.rule=Host(`nightly.kessler.xyz`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
      # # Explicitly define the port (optional but recommended)
      # - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    expose:
      - 3000
    command:
      - "npm"
      - "run"
      - "start"
  backend-go:
    image: fractalhuman1/kessler-backend-go:latest
    command:
      - "./kessler-backend-go"
    env_file:
      - config/global.env
    environment:
      <<: *common-env
    expose:
      - 4041
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.backend-go.rule=Host(`nightly-api.kessler.xyz`) && PathPrefix(`/v2`)"
      # - "traefik.http.routers.backend-go.middlewares=state-redirect@file"
      - "traefik.http.middlewares.test-stripprefix.stripprefix.prefixes=/v2"
      - "traefik.http.routers.backend-go.entrypoints=websecure"
      - "traefik.http.routers.backend-go.tls.certresolver=myresolver"
