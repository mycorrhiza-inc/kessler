# vector.yaml config for logshipping

# global
data_dir: '/var/lib/vector'


# NOTE: this is _enabled_ for helm chart deployments 
# see: https://github.com/vectordotdev/helm-charts/blob/develop/charts/vector/examples/datadog-values.yaml#L78-L81
api:
  enabled: false

sources:
  # generate_syslog:
  #   type: "demo_logs"
  #   format: "syslog"
  #   count: 100000
  #   interval: 0.001
  #
  api_logs:
    type: "file"
    include: 
    - "/var/log/kessler/api/*.log"
    ignore_older_secs: 86400     # 1 day

  traefik_logs:
    type: "file"
    include:
    - "/var/log/kessler/proxy/*.log"
    ignore_older_secs: 86400     # 1 day

transforms:
  api_parser:
    inputs:
      - "api_logs"
    type: "remap"
    source: ". = parse_json!(.message)"

  # remap_syslog:
  #   inputs:
  #     - "generate_syslog"
  #     - "traefik_logs"
  #     - "postgres_logs"
  #   type: "remap"
  #   source: |
  #     structured = parse_syslog!(.message)
  #     .timestamp_nanos, err = to_unix_timestamp(structured.timestamp, unit: "nanoseconds")
  #     .body = structured
  #     .service_name = structured.appname
  #     .resource_attributes.source_type = .source_type
  #     .resource_attributes.host.hostname = structured.hostname
  #     .resource_attributes.service.name = structured.appname
  #     .attributes.syslog.procid = structured.procid
  #     .attributes.syslog.facility = structured.facility
  #     .attributes.syslog.version = structured.version
  #     .severity_text = if includes(["emerg", "err", "crit", "alert"], structured.severity) {
  #       "ERROR"
  #     } else if structured.severity == "warning" {
  #       "WARN"
  #     } else if structured.severity == "debug" {
  #       "DEBUG"
  #     } else if includes(["info", "notice"], structured.severity) {
  #       "INFO"
  #     } else {
  #       structured.severity
  #     }
  #     .scope_name = structured.msgid
  #     del(.message)
  #     del(.timestamp)
  #     del(.source_type)

# useful to see the logs in the terminal
# sinks:
#   emit_syslog:
#     inputs:
#       - "remap_syslog"
#     type: "console"
#     encoding:
#       codec: "json"

sinks:
  quickwit_logs:
    type: "http"
    method: "post"
    inputs:
      # - "remap_syslog"
      - "api_parser"
    encoding:
      codec: "json"
    framing:
      method: "newline_delimited"
    uri: "http://127.0.0.1:7280/api/v1/otel-logs-v0_8/ingest"
