# local development docker compose
services:
  reverse-proxy:
    image: traefik:v3.1.2
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.constraints=Label(`traefik.namespace`,`kessler`)"
    expose:
      - 80
      - 443
    ports:
      - "80:80"
      - "${PROXY_UI_PORT:-8083}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  frontend:
    hostname: "kessler.xyz"
    build:
      context: ./frontend
      dockerfile: ./Dockerfile-dev
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "logging-nixos-docker.tail4a273.ts.net:4317"
        fluentd-async: "true"
        tag: "kessler.frontend"
        mode: "non-blocking"
    env_file:
      - config/global.env
    volumes:
      - ./frontend/src/:/app/src
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
    expose:
      - 3000
    command:
      - "npm"
      - "run"
      - "dev"

  backend-go:
    image: cosmtrek/air
    command:
      - "air"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "logging-nixos-docker.tail4a273.ts.net:4317"
        fluentd-async: "true"
        tag: "kessler.backend"
        mode: "non-blocking"
    env_file:
      - config/global.env
    environment:
      - "air_wd=/app"
    volumes:
      - ./backend-go:/app
    working_dir: /app
    expose:
      - 4041
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.go-backend.rule=PathPrefix(`/v2`)"
      - "traefik.http.middlewares.test-stripprefix.stripprefix.prefixes=/v2"
