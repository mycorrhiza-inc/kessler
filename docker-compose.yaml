# local development docker compose
version: "3"

services:
  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    env_file:
      - config/global.env
    volumes:
      - ./config/frontend.env.local:/app.env.local
      # - ./frontend/src:/app/src
      # - ./frontend/public:/app/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
    expose:
      - "3000"
    command:
      - "npm"
      - "run"
      - "start"

  reverse-proxy:
    # official image
    image: traefik:v2.11
    # eable web ui, listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8083:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  backend:
    build:
      context: ./backend
      # dockerfile: ./Dockerfile
      dockerfile: ./Dockerfile
    env_file:
      - config/global.env
    volumes:
      - ./volumes/instance:/app/instance
      - ./volumes/files:/files
      - ./volumes/tmp:/tmp/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=*"
    command:
      # - "python"
      # - "rag/postgres_example.py"
      - "uvicorn"
      - "main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5505"
      - "--workers"
      - "4"
      - "--reload"
    expose:
      - 5505
    ports:
      - "5505:5505"

  database:
    image: pgvector/pgvector:pg16
    restart: always
    ports:
      - "6543:5432"
    env_file:
      - config/global.env
    expose:
      - "5432"
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data
