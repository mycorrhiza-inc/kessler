# local development docker compose
services:
  reverse-proxy:
    # official image
    image: traefik:v3.0
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=mbright@kessler.xyz"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.filename=/etc/traefik/traefik_dynamic.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "${PROXY_UI_PORT:-8083}:8080"
    volumes:
      - "${VOLUMES_DIRECTORY:-./volumes}/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik_dynamic.yaml:/etc/traefik/traefik_dynamic.yaml:ro"
  frontend:
    image: fractalhuman1/kessler-frontend:latest
    env_file:
      - config/global.env
    volumes:
      - ./config/frontend.env.local:/app.env.local
      - ./config/global.env:/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`kessler.xyz`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.rule=Host(`ny.kessler.xyz`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.rule=HostRegexp(`{state:al|ak|az|ar|ca|co|ct|de|fl|ga|hi|id|il|in|ia|ks|ky|la|me|md|ma|mi|mn|ms|mo|mt|ne|nv|nh|nj|nm|ny|nc|nd|oh|ok|or|pa|ri|sc|sd|tn|tx|ut|vt|va|wa|wv|wi|wy}.kessler.xyz`)"
      # - "traefik.http.routers.frontend.middlewares=state-redirect@file"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.rule=Host(`kessler.xyz`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    expose:
      - 3000
    command:
      # - "sleep"
      # - "9999999999d"
      - "npm"
      - "run"
      - "start"

  backend-go:
    image: fractalhuman1/kessler-backend-go:latest
    command:
      - "go"
      - "run"
      - "main.go"
    env_file:
      - config/global.env
    expose:
      - 4041
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-go.rule=Host(`kessler.xyz`) && PathPrefix(`/api/v2`)"
      - "traefik.http.routers.backend-go.rule=Host(`ny.kessler.xyz`) && PathPrefix(`/api/v2`)"
      - "traefik.http.routers.backend-go.rule=HostRegexp(`{state:al|ak|az|ar|ca|co|ct|de|fl|ga|hi|id|il|in|ia|ks|ky|la|me|md|ma|mi|mn|ms|mo|mt|ne|nv|nh|nj|nm|ny|nc|nd|oh|ok|or|pa|ri|sc|sd|tn|tx|ut|vt|va|wa|wv|wi|wy}.kessler.xyz`) && PathPrefix(`/api/v2`)"
      # - "traefik.http.routers.backend-go.middlewares=state-redirect@file"
      - "traefik.http.middlewares.test-stripprefix.stripprefix.prefixes=/api/v2"
      - "traefik.http.routers.backend-go.entrypoints=websecure"
      - "traefik.http.routers.backend-go.tls.certresolver=myresolver"

  # Already depricated in dev enviorment.
  backend-python:
    image: fractalhuman1/kessler-backend-python:latest
    env_file:
      - config/global.env
    volumes:
      - ${VOLUMES_DIRECTORY:-./volumes}/files:/files
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-python.rule=Host(`kessler.xyz`) && PathPrefix(`/api/v1`) || PathPrefix(`/schema`)"
      - "traefik.http.routers.backend-python.entrypoints=websecure"
      - "traefik.http.routers.backend-python.tls.certresolver=myresolver"
    command:
      - "uvicorn"
      - "main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "5505"
      - "--workers"
      - "4"
      - "--reload"
    expose:
      - 5505
