// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: filters.sql

package dbstore

import (
	"context"
)

const getFiltersByState = `-- name: GetFiltersByState :many
SELECT id, name, state, description, is_active, created_at, updated_at
FROM filters
WHERE state = $1 AND is_active = true
ORDER BY created_at DESC
`

func (q *Queries) GetFiltersByState(ctx context.Context, state string) ([]Filter, error) {
	rows, err := q.db.Query(ctx, getFiltersByState, state)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Filter
	for rows.Next() {
		var i Filter
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.State,
			&i.Description,
			&i.IsActive,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
