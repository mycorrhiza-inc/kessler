# local development docker compose
services:
  frontend-blue: &frontend
    container_name: frontend-blue
    image: fractalhuman1/kessler-frontend:latest
    env_file:
      - config/global.env
    volumes:
      - ./config/frontend.env.local:/app.env.local
      - ./config/global.env:/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.frontend.rule=Host(`kessler.xyz`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.rule=HostRegexp(`{state:al|ak|az|ar|ca|co|ct|de|fl|ga|hi|id|il|in|ia|ks|ky|la|me|md|ma|mi|mn|ms|mo|mt|ne|nv|nh|nj|nm|ny|nc|nd|oh|ok|or|pa|ri|sc|sd|tn|tx|ut|vt|va|wa|wv|wi|wy}.kessler.xyz`)"
      - traefik.http.routers.blog.tls.domains[0].main=kessler.xyz
      - traefik.http.routers.blog.tls.domains[0].sans=*.kessler.xyz
      # - "traefik.http.routers.frontend.middlewares=state-redirect@file"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.rule=Host(`kessler.xyz`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
      # Middleware healthcheck stuff
      - "traefik.http.middlewares.test-retry.retry.attempts=5"
      - "traefik.http.middlewares.test-retry.retry.initialinterval=200ms"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.services.web.loadbalancer.healthCheck.path=/"
      - "traefik.http.services.web.loadbalancer.healthCheck.interval=10s"
      - "traefik.http.services.web.loadbalancer.healthCheck.timeout=1s"
    restart: always
    expose:
      - 3000
    command:
      # - "sleep"
      # - "9999999999d"
      - "npm"
      - "run"
      - "start"
  frontend-green:
    <<: *frontend
    container_name: frontend-green

  backend-go-blue: &backend-go
    container_name: backend-go-blue
    image: fractalhuman1/kessler-backend-go:latest
    command:
      - "./kessler-backend-go"
    env_file:
      - config/global.env
    expose:
      - 4041
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.backend-go.rule=Host(`api.kessler.xyz`) && PathPrefix(`/v2`)"
      # - "traefik.http.routers.backend-go.middlewares=state-redirect@file"
      - "traefik.http.middlewares.test-stripprefix.stripprefix.prefixes=/v2"
      - "traefik.http.routers.backend-go.entrypoints=websecure"
      - "traefik.http.routers.backend-go.tls.certresolver=myresolver"
      # Middleware healthcheck stuff
      - "traefik.http.middlewares.test-retry.retry.attempts=5"
      - "traefik.http.middlewares.test-retry.retry.initialinterval=200ms"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.services.web.loadbalancer.healthCheck.path=/v2/ping"
      - "traefik.http.services.web.loadbalancer.healthCheck.interval=10s"
      - "traefik.http.services.web.loadbalancer.healthCheck.timeout=1s"
  backend-go-green:
    <<: *backend-go
    container_name: backend-go-green

networks:
  traefik:
    name: traefik_webgateway
    external: true
