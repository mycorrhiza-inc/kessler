x-common-env: &common-env
  OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
  VERSION_HASH: ${VERSION_HASH}
  DOMAIN: "${DOMAIN}"
  PUBLIC_KESSLER_API_URL: http://"${PUBLIC_KESSLER_API_URL}"
  INTERNAL_KESSLER_API_URL: "http://backend-server:4041"
  INTERNAL_REDIS_ADDRESS: "valkey:6379"

services:
  frontend:
    image: fractalhuman1/kessler-frontend:${VERSION_HASH}
    env_file:
      - config/global.env
    environment:
      <<: *common-env
    volumes:
      - ./config/frontend.env.local:/app.env.local
      - ./config/global.env:/app/.env
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.blog.tls.domains[0].main=${DOMAIN}"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    expose:
      - 3000
    command:
      - "npm"
      - "run"
      - "start"

  backend-server:
    image: fractalhuman1/kessler-backend-server:${VERSION_HASH}
    command:
      - "./kessler-server"
    env_file:
      - config/global.env
    environment:
      <<: *common-env
    expose:
      - 4041
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.backend-server.rule=Host(`${PUBLIC_KESSLER_API_URL}`) && PathPrefix(`/v2`)"
      - "traefik.http.routers.backend-server.entrypoints=websecure"
      - "traefik.http.routers.backend-server.tls.certresolver=myresolver"

  backend-ingest:
    image: fractalhuman1/kessler-backend-ingest:${VERSION_HASH}
    command:
      - "./kessler-ingest"
    env_file:
      - config/global.env
    environment:
      <<: *common-env
    expose:
      - 4042
    labels:
      - "traefik.enable=true"
      - "traefik.namespace=kessler"
      - "traefik.http.routers.backend-ingest.rule=Host(`${PUBLIC_KESSLER_API_URL}`) && PathPrefix(`/ingest_v1`)"
      - "traefik.http.routers.backend-ingest.entrypoints=websecure"
      - "traefik.http.routers.backend-ingest.tls.certresolver=myresolver"
      - "traefik.http.services.backend-ingest.loadbalancer.server.port=4042"

  reverse-proxy:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.constraints=Label(`traefik.namespace`,`kessler`)"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=mbright@kessler.xyz"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.filename=/etc/traefik/traefik_dynamic.yaml"
    ports:
      - "80:80"
      - "443:443"
      - "8083:8080"
    volumes:
      - "./volumes/letsencrypt:/letsencrypt"
      - "/run/podman/podman.sock:/var/run/docker.sock:ro"
      - "./traefik_dynamic.yaml:/etc/traefik/traefik_dynamic.yaml:ro"
  valkey:
    hostname: valkey
    image: valkey/valkey:7.2.5
    volumes:
      - ./volumes/valkey.conf:/etc/valkey/valkey.conf
      - ./volumes/valkey-data:/data
    command: valkey-server /etc/valkey/valkey.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    expose:
      - 6379
  cache:
    image: memcached:1.6.37-alpine
    command: --conn-limit=1024
      --memory-limit=64
      --threads=2
    restart: always
    ports:
      - "11211:11211"
    expose:
      - 11211
